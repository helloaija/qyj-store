<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qyj.store.dao.QyjSellProductMapper">
	<resultMap id="baseResultMap" type="com.qyj.store.entity.QyjSellProductEntity">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="sell_id" jdbcType="BIGINT" property="sellId" />
		<result column="product_id" jdbcType="BIGINT" property="productId" />
		<result column="product_title" property="productTitle" />
		<result column="product_unit" property="productUnit" />
		<result column="price" jdbcType="DECIMAL" property="price" />
		<result column="number" jdbcType="INTEGER" property="number" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
	</resultMap>

	<sql id="baseColumnList">
		id, sell_id, product_id, price, number, create_time, update_time
	</sql>
	
	<!-- 根据订单获取订单商品 -->
	<select id="listSellProductBySellId" parameterType="java.lang.Long" resultMap="baseResultMap">
		select <include refid="baseColumnList" /> from qyj_sell_product where sell_id = #{sellId}
	</select>

	<!-- 根据订单获取订单商品 -->
	<select id="listSellProductJoinBySellId" parameterType="java.lang.Long" resultMap="baseResultMap">
		select sp.id, sp.sell_id, sp.product_id, p.title product_title, p.product_unit, sp.price, sp.number,
				sp.create_time, sp.update_time
		from qyj_sell_product sp left join qyj_product p on sp.product_id = p.id
		where sp.sell_id = #{sellId}
	</select>

	<!-- 批量插入订单商品 -->
	<insert id="insertSellProductList" parameterType="java.util.List">
		insert into qyj_sell_product (sell_id, product_id, price, number, create_time, update_time) values
		<foreach collection="list" item="item" index="index" separator=",">
			(#{item.sellId}, #{item.productId}, #{item.price}, #{item.number},
			#{item.createTime}, #{item.updateTime})
		</foreach>
	</insert>

	<!-- 批量更新进货单产品 -->
	<update id="updateSellProductList" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" separator=";">
			update qyj_sell_product set
				<trim suffix="" suffixOverrides=",">
					<if test="item.productId != null">
						product_id = #{item.productId},
					</if>
					<if test="item.price != null">
						price = #{item.price},
					</if>
					<if test="item.number != null">
						number = #{item.number},
					</if>
					<if test="item.updateTime != null">
						update_time = #{item.updateTime},
					</if>
				</trim>
			where id = ${item.id}
		</foreach>
	</update>

	<!-- 批量删除进货单产品 -->
	<delete id="deleteSellProductList" parameterType="java.util.List">
		delete from  qyj_sell_product where id in
		<foreach item="item" collection="list" index="index" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>

	<!-- 根据sellId删除进货单产品 -->
	<delete id="deleteSellProductBySellId" parameterType="java.lang.Long">
		delete from qyj_sell_product where sell_id = #{sellId}
	</delete>

	<!--获取销售产品按月统计数量-->
	<select id="countSellProductMonth" parameterType="java.util.Map" resultType="java.util.Map">
		select count(t.product_id) totalCount, sum(t.totalPrice) totalSellPrice, sum(t.stockPrice) totalStockPrice from (
			select sp.product_id, sum(sp.price * sp.number) totalPrice,
				(select sum(sp.number) * sum(price * number) / sum(number) from qyj_stock_product where product_id = sp.product_id) as stockPrice
			from qyj_sell_product sp join qyj_product p join qyj_sell_order o on sp.product_id = p.id and sp.sell_id = o.id
			where 1=1 and sp.price > 0
			<if test="year != null and year != ''">
				and date_format(o.order_time, '%Y') = #{year}
			</if>
			<if test="month != null and month != ''">
				and date_format(o.order_time, '%m') = #{month}
			</if>
			<if test="pageParam != null">
				${pageParam.queryCondition}
			</if>
			group by sp.product_id
		) t
	</select>

	<!--获取销售产品按月统计列表-->
	<select id="listSellProductMonth" parameterType="java.util.Map" resultType="com.qyj.store.model.QyjProductMonthCountModel">
		select p.id productId, p.title productTitle, p.product_unit productUnit, sum(sp.number) totalNumber, sum(sp.price * sp.number) totalPrice,
			min(sp.price) minPrice, max(sp.price) maxPrice, count(distinct(o.user_id)) userNumber, count(o.id) orderNumber,
			(select sum(price * number) / sum(number) from qyj_stock_product where product_id = sp.product_id) as avgStockPrice
		from qyj_sell_product sp join qyj_product p join qyj_sell_order o on sp.product_id = p.id and sp.sell_id = o.id
		where 1=1 and sp.price > 0
		<if test="year != null and year != ''">
			and date_format(o.order_time, '%Y') = #{year}
		</if>
		<if test="month != null and month != ''">
			and date_format(o.order_time, '%m') = #{month}
		</if>
		<if test="pageParam != null">
			${pageParam.queryCondition}
		</if>
		group by sp.product_id order by totalNumber desc
		<if test="pageParam != null">
			${pageParam.limit}
		</if>
	</select>

	<!--获取每个月销售额，按产品类型统计-->
	<select id="getMonthSellData" parameterType="java.lang.Integer" resultType="java.util.Map">
		select p.product_type productType, date_format(o.order_time, '%c') sellMonth, sum(sp.price * sp.number) monthPrice
		from qyj_sell_product sp join qyj_product p join qyj_sell_order o on sp.product_id = p.id and sp.sell_id = o.id
		where date_format(o.order_time, '%Y') = #{year}
		group by p.product_type, date_format(o.order_time, '%c');
	</select>

</mapper>